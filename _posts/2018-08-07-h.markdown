---
title: h
layout: post
---

```
generic code block
wow
-wee
yey
```

```csharp
private static void Anim(string txt)
{
     int no = 0; //counter
     while (animrun)
     {
     Console.Clear();
     Console.Write(txt);

     StringBuilder sb = new StringBuilder(); //do the dots
     sb.Append('.', no);
     Console.Write(sb.ToString());

     System.Threading.Thread.Sleep(300); //wait
     if (no % 3 == 0) //if no is fully divisible by 3
     {
        no = 0; //reset
     }
     no++;
    }
}
```

```js
var stripno = Big(32000);
var lower = Big(0);
var upper = Big(4);
var precision = 10000;

Do();
Big.DP = precision;
Big.RM = 4;

function f(x){
//return (6*Math.pow(x,2))/(Math.pow(x,3)+2);
return (x.pow(2).times(6)).div(x.pow(3).plus(2));
}

function Do(){
var midsum = Big(0);
//var h = (upper-lower)/stripno;
var h = upper.minus(lower).div(stripno);
for(var i = (lower.plus(h)); i.lt(upper); i= i.plus(h)){
//console.log(i.toFixed(5));
midsum = midsum.plus(f(i));
}
```

```d
import std.algorithm, std.conv, std.functional,
    std.math, std.regex, std.stdio;

alias round = pipe!(to!real, std.math.round, to!string);
static reFloatingPoint = ctRegex!`[0-9]+\.[0-9]+`;

void main()
{
    // Replace anything that looks like a real
    // number with the rounded equivalent.
    stdin
        .byLine
        .map!(l => l.replaceAll!(c => c.hit.round)
                                (reFloatingPoint))
        .each!writeln;
}

```

```python
def img(self):
	#should work for most
	for line in self.data['Events']:
	    if line.startswith('0,0,"'):
	        m=re.search(r'\"([^\"]+)\"',line)
	        return os.path.join(self.dir,m.group(1))
	return None
```